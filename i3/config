#  _ ____
# (_)__ /___ __ _ __ _ _ __ ___
# | ||_ \___/ _` / _` | '_ (_-<
# |_|___/   \__, \__,_| .__/__/
#           |___/     |_|
#
# Author: Benedikt Vollmerhaus <benedikt@vollmerhaus.org>
# License: MIT
#
# i3 config file (v4)

set $mod Mod4

set $left_key  Left
set $down_key  Down
set $up_key    Up
set $right_key Right

set $window_border 2

# No. of pixels by which to resize the gaps per keypress
set $gaps_resize 1
# Percent by which to raise/lower the volume per keypress
set $volume_change 5


#
#  /\  _  _ | . _ _ _|_. _  _  _
# /--\|_)|_)|_|(_(_| | |(_)| |_)
#     |  |

set $browser firefox
set $private_browser firefox --private-window
set $launcher rofi -show drun -modi drun
set $locker --no-startup-id multilockscreen -l
set $screenshot scrot ~/Pictures/Screenshots/%b%d::%H%M%S.png
set $term kitty
set $macs emacs

# ___
#  | |_  _  _ _ . _  _
#  | | |(/_| | ||| |(_|
#                    _|

font pango:FiraCode Nerd Font
for_window [class=".*"] title_format " %title"

set_from_resource $bg     color0 #0a0a0a
set_from_resource $fg     color7 #c8c8c8
set_from_resource $color1 color1 #a54242
set_from_resource $color4 color4 #5f819d

#                       |---- Titlebar ----|  |---- Frame ----|
# Class                 Border  Backgr. Text  Indicator Border
client.focused          $color1 $color1 $fg   #ffffff   $color1
client.focused_inactive $color1 $bg     $fg   $color4   $bg
client.unfocused        $color1 $bg     $fg   $color4   $bg
client.urgent           $bg     $bg     $fg   $color4   $bg
client.placeholder      $bg     $bg     $fg   $color4   $bg

client.background       $bg


#  __
# / _  _  _  _
# \__)(_||_)_)
#        |

gaps inner 8
smart_gaps on
smart_borders on

for_window [class="^.*"] border pixel $window_border


#
# \    / _  _|  _ _  _  _ _  _
#  \/\/ (_)| |<_)|_)(_|(_(/__)
#                |

set $ws_web    1:一
set $ws_term   2:二
set $ws_dev    3:三
set $ws_chat   4:四
set $ws_tex    5:五
set $ws_games  6:六
set $ws_thesis 7:七
set $ws8       8:八
set $ws9       9:九
set $ws_music 10:〇

# Firefox
for_window [class="(?i)firefox" window_role="^(?!About$)" window_type="normal"] move to workspace $ws_web, focus
for_window [class="(?i)firefox" window_role="About"] floating enable
# Hide border on Firefox popups (e.g. "Extension has been added")
for_window [class="(?i)firefox" window_role="Popup"] border none

# JetBrains IDEs
assign [class="jetbrains-(?!toolbox).+" window_type="normal"] $ws_dev
# JetBrains Toolbox
for_window [class="jetbrains-toolbox"] floating enable, border pixel 1
# JetBrains Splash/Customize Screens
for_window [class="jetbrains-.+" title="^(win0|Customize .+)$"]   move to workspace $ws_dev, floating enable, border pixel 1

# Communication
assign [class="Slack|Element|Evolution|Thunderbird|TelegramDesktop|Zoom|Kontact|Korganizer|Microsoft"] $ws_chat

# games
assign [class="Steam|Wine"] $ws_games

# music
for_window [class="(?i)Spotify"] move to workspace $ws_music

# work
for_window [class="(?i)Code"] move to workspace $ws_dev

#            __
# |_/ _     |__). _  _|. _  _  _
# | \(/_\/  |__)|| |(_||| |(_|_)
#       /                   _|

focus_follows_mouse no

# Reload the configuration file
bindsym $mod+Shift+c reload; exec notify-send "Reloaded i3 config."
# Restart i3 in-place (preserves layout/session)
bindsym $mod+Shift+r restart

### Applications ###

bindsym $mod+F1 exec $macs
bindsym $mod+F2 exec $browser
bindsym $mod+F4 exec $private_browser
bindsym $mod+d exec $launcher
bindsym $mod+Shift+o exec $locker
bindsym $mod+Print exec $screenshot
bindsym Print exec flameshot gui
bindsym $mod+Return exec $term
bindsym $mod+F3 exec pcmanfm

### Window Actions ###

# Toggle fullscreen mode for focused container
bindsym $mod+f fullscreen toggle
# Kill focused window
bindsym $mod+Shift+q kill

### Containers ###

# Toggle split orientation
bindsym $mod+q split toggle
# Split in vertical orientation
bindsym $mod+v split v
# Split in horizontal orientation
bindsym $mod+b split h

# Change container layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Change focused container
bindsym $mod+$left_key  focus left
bindsym $mod+$down_key  focus down
bindsym $mod+$up_key    focus up
bindsym $mod+$right_key focus right
bindsym $mod+h          focus left
bindsym $mod+j          focus down
bindsym $mod+k          focus up
bindsym $mod+l          focus right

# Move focused container
bindsym $mod+Shift+$left_key  move left
bindsym $mod+Shift+$down_key  move down
bindsym $mod+Shift+$up_key    move up
bindsym $mod+Shift+$right_key move right
bindsym $mod+Shift+h          move left
bindsym $mod+Shift+j          move down
bindsym $mod+Shift+k          move up
bindsym $mod+Shift+l          move right

# Focus latest urgent window
bindsym $mod+u [urgent=latest] focus
# Focus parent container
bindsym $mod+a focus parent
# Focus child container
bindsym $mod+c focus child

### Floating Windows ###

# Key to hold for dragging floating containers
floating_modifier $mod
# Toggle focus between tiling/floating containers
bindsym $mod+space focus mode_toggle
# Toggle tiling/floating mode for focused container
bindsym $mod+Shift+space floating toggle

### Workspaces ###

bindsym $mod+Tab workspace back_and_forth

# Switch to workspace
bindsym $mod+1 workspace $ws_web
bindsym $mod+2 workspace $ws_term
bindsym $mod+3 workspace $ws_dev
bindsym $mod+4 workspace $ws_chat
bindsym $mod+5 workspace $ws_tex
bindsym $mod+6 workspace $ws_games
bindsym $mod+7 workspace $ws_thesis
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws_music

# Move focused container to workspace
bindsym $mod+Shift+1 move to workspace $ws_web
bindsym $mod+Shift+2 move to workspace $ws_term
bindsym $mod+Shift+3 move to workspace $ws_dev
bindsym $mod+Shift+4 move to workspace $ws_chat
bindsym $mod+Shift+5 move to workspace $ws_tex
bindsym $mod+Shift+6 move to workspace $ws_games
bindsym $mod+Shift+7 move to workspace $ws_thesis
bindsym $mod+Shift+8 move to workspace $ws8
bindsym $mod+Shift+9 move to workspace $ws9
bindsym $mod+Shift+0 move to workspace $ws_music

# Move workspace between outputs
bindsym $mod+Ctrl+$left_key  move workspace to output left
bindsym $mod+Ctrl+$down_key  move workspace to output down
bindsym $mod+Ctrl+$up_key    move workspace to output up
bindsym $mod+Ctrl+$right_key move workspace to output right


#  __
# |_    _  __|_. _  _   |_/ _    _
# | |_|| |(_ | |(_)| |  | \(/_\/_)
#                             /

# Volume
set $sink $(pacmd list-sinks | awk '/\* index:/ { print $3 }')
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $sink +$volume_change%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume $sink -$volume_change%
bindsym XF86AudioMute exec pactl set-sink-mute $sink toggle

# Microphone
set $source $(pacmd list-sources | awk '/\* index:/ { print $3 }')
bindsym XF86AudioMicMute exec pactl set-source-mute $source toggle

# MPRIS Player Controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioStop exec playerctl stop

#
# |\/| _  _| _  _
# |  |(_)(_|(/__)
#

set $mode_resize " Resize"
mode $mode_resize {
    bindsym $left_key  resize shrink width  5 px or 2 ppt
    bindsym $down_key  resize grow   height 5 px or 2 ppt
    bindsym $up_key    resize shrink height 5 px or 2 ppt
    bindsym $right_key resize grow   width  5 px or 2 ppt
    bindsym h resize shrink width  5 px or 2 ppt
    bindsym j resize grow   height 5 px or 2 ppt
    bindsym k resize shrink height 5 px or 2 ppt
    bindsym l resize grow   width  5 px or 2 ppt

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $mode_gaps "Gaps: %{T2}ﰂ%{T-} / %{T2}ﯰ%{T-} for inner,\
 hold %{F#333}[%{F-}Mod%{F#333}]%{F-} for outer"
mode $mode_gaps {
    bindsym plus       gaps inner all plus  $gaps_resize
    bindsym minus      gaps inner all minus $gaps_resize
    bindsym $mod+plus  gaps outer all plus  $gaps_resize
    bindsym $mod+minus gaps outer all minus $gaps_resize

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

set $mode_power \
 "%{T2}%{F#821717}襤%{F-}%{T-} %{F#333}[%{F-}S%{F#333}]%{F-}\
  %{T2}%{F#824517}ﰇ%{F-}%{T-} %{F#333}[%{F-}R%{F#333}]%{F-}\
  %{T2}%{F#03ac13}♨%{F-}%{T-} %{F#333}[%{F-}P%{F#333}]%{F-}\
  %{T2}%{F#174282}%{F-}%{T-} %{F#333}[%{F-}L%{F#333}]%{F-}"
mode $mode_power {
    bindsym s exec shutdown now
    bindsym r exec shutdown -r now
    bindsym l exec i3-msg exit
    bindsym p exec systemctl suspend && $locker, mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

bindsym $mod+r mode $mode_resize
bindsym $mod+g mode $mode_gaps
bindsym $mod+Shift+x mode $mode_power
bindsym $mod+Shift+Tab mode $mode_music
set $mode_music \
 "♫ Music Menu:\
  / %{F#333}[%{F-}Space%{F#333}]%{F-}\
   %{F#333}[%{F-}P%{F#333}]%{F-}\
   %{F#333}[%{F-}N%{F#333}]%{F-}"
mode $mode_music {
    bindsym space exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause, mode "default"
    bindsym p exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous, mode "default"
    bindsym n exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next, mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
#
#  /\    _|_ _  __|_ _  __|_
# /--\|_| | (_)_) | (_||  |
#

# compositor
exec_always --no-startup-id picom -b

# Launch Polybar after Pywal has restored the color scheme
exec --no-startup-id bash $HOME/.scripts/spotify/launchlistener.sh
exec_always --no-startup-id wal -R -o $HOME/.config/polybar/launch_polybar
exec_always --no-startup-id nitrogen --restore

# Custom Scripts (https://gitlab.com/BVollmerhaus/scripts)
exec --no-startup-id $HOME/.config/i3/battery_notify.py
exec --no-startup-id $HOME/.config/i3/brightness_notify.py
exec --no-startup-id $HOME/.config/i3/urgency_timeout.py

# Tray Applets
exec --no-startup-id nm-applet
exec --no-startup-id redshift-gtk

# autolock
exec xautolock -detectsleep -time 10 -locker $locker -notify 10 \
		-notifier "notify-send -u critical -t 10000 -- 'Locking screen in 10 seconds'"
